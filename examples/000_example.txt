# This file contains a brief description of the command-syntax.
# This file itself is a command script and can be copied to the
# script area of the eHKT-user GUI.
#
# Here are the rules for a script:
# 1. A hashtag (#-character) and everything after it is ignored.
# 2. Whitespaces (e.g. 'space', 'tabulator', etc.) are ignored.
# 3. If a line (except for ignored whitespaces) starts with one of the following
#    patterns, then it contains a command-to-be-performed, other lines are
#    ignored:
#    a. "6b", a SICCT-envelope followed by a command APDU
#    b. "KT" followed by a command APDU sent to SICCT-address '0000'
#    c. "SlotXXXX" followed by a command APDU sent to SICCT-address 'XXXX' (hexadecimal)
#    d. "log", everything after that is logged with log-level INFO
#    e. "wait" followed by a decimal number; the script pauses / [milliseconds]

# Detailed description for command-to-perform "log":
# The string after "log" is taken as a log-message. That message is logged
# with log-level "INFO". Such messages improve the readibility of log-files
# (in case the user whishes to).
logHelloWorld!
log  Nice messages.

# Detailed description for command-to-perform "6b":
# "6b" is the start of a SICCT envelope followed by a command APDU, e.g.
# a SICCT GET STATUS command requesting a CTM DO. Hereafter, two variants are
# given, the first with some extra spaces and other non-hexadecimal characters
# (which are all ignored to make the line human friendly), and the second
# variant without extra characters (i.e, compact):
logSICCT Get STATUS (twice) requesting the CTM-DO
# |     SICCT envelope        ||  command APDU                                    |
# CMD ADDR SeqNr RFU length   ||  CLA INS P1 P2 extended-length-indicator Le-field
  6b  0000 1234  00  00000007 ||  80  13  00 46          00               0000
6b00001234000000000780130046000000

# Detailed description for command-to-perform "KT":
# "KT" is followed by any command APDU, which is sent to address='0000',
# i.e., the SICCT interpreter of the eHKT. Hereafter, two variants are given,
# the first is user-friendly with some extra non-hexadecimal characters, and
# the second without extra characters:
logAgain, SICCT GET STATUS requesting the CTM-DO
#  CLA INS P1 P2 extended-length-indicator Le-field
KT 80  13  00 46          00               0000 # SICCT GET STATUS requesting CTM-DO
KT80130046000000

# Hereafter a SICCT REQUEST ICC command follows for slot 1:
logSICCT REQUEST ICC, slot 1
#  CLA INS P1 P2   Lc  Data     Le-field
KT 80  12  01 0d   03  80-01-3c 00 # SICCT REQUEST ICC, slot 1, standard message, ATR

    # Note 1: Intentionally everything in between SICCT REQUEST ICC and
    #         SICCT EJECT ICC has indentation. This improves the readability and
    #         makes it easier to detect subareas in a script.
    # Note 2: Indentation is not necessary, but helpfull.

    # Detailed description for a command-to-perform "SlotXXXX":
    # "SlotXXXX" followed by a command APDU is intended to be sent to an ICC in slot
    # "XXXX" (hexadecimal number)
    logREAD BINARY from EF.GDO
    #   XXXXCLA INS P1 P2 Le-field Note: No character between SlotXXXX and CLA-byte
    Slot000100  b0  82 00 00 # READ BINARY with shortFileIdentifer (here EF.GDO)

    #   XXXX CLA INS P1 P2 Le-field Note: character(s) between SlotXXXX and CLA-byte
    logReadBinary from EF.ATR
    Slot0001 00  b0  9d 00 00 # READ BINARY with shortFileIdentifer (here EF.ATR)

    # Detailed description for command-to-perform "wait":
    # The string "wait" is followed by a decimal number. That number gives the
    # waiting time in milliseconds. The script pauses for the given time.
    # A user may choose to pause the script to do other things before the
    # script continues, e.g., eject a card etc.
    wait500  # wait 500 milliseconds, no character between "wait" and the number
    wait 100 # wait another 100 milliseconds, with character between "wait" and the number

# SICCT EJECT ICC from slot 1 with one minute waiting time
logSICCT EJECT ICC from slot 1
#  CLA INS P1 P2   Lc   Data Le-field
KT 80  15  01 0c   03   80-01-3c
